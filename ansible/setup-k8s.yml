---
- hosts: all
  become: yes
  vars:
    kube_version: "1.28.5-1.1"  # Verified available version
    pod_network_cidr: "10.244.0.0/16"
    flannel_url: "https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"

  tasks:
    - name: Update apt package index
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required system packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
        state: present

    - name: Create keyrings directory
      file:
        path: /usr/share/keyrings
        state: directory
        mode: '0755'

    - name: Add Kubernetes GPG key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /usr/share/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /usr/share/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes repository
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
        filename: kubernetes.list
        state: present
        update_cache: yes

    - name: Install Kubernetes components
      apt:
        name:
          - kubelet={{ kube_version }}
          - kubeadm={{ kube_version }}
          - kubectl={{ kube_version }}
        state: present
        update_cache: yes
        allow_downgrade: yes

    - name: Hold Kubernetes packages
      shell: apt-mark hold kubelet kubeadm kubectl
      args:
        executable: /bin/bash

    - name: Disable swap
      shell: |
        swapoff -a
        sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
      args:
        executable: /bin/bash

    - name: Enable kernel modules
      modprobe:
        name:
          - br_netfilter
          - overlay
        state: present

    - name: Configure sysctl
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      with_dict:
        net.bridge.bridge-nf-call-ip6tables: 1
        net.bridge.bridge-nf-call-iptables: 1
        net.ipv4.ip_forward: 1

- hosts: minikube-master
  become: yes
  tasks:
    - name: Initialize Kubernetes cluster
      command: kubeadm init --pod-network-cidr={{ pod_network_cidr }} --ignore-preflight-errors=Swap
      register: kubeadm_init
      failed_when: kubeadm_init.rc != 0 and "already initialized" not in kubeadm_init.stderr

    - name: Set up kubeconfig
      block:
        - name: Create .kube directory
          file:
            path: /root/.kube
            state: directory
            mode: '0700'
        - name: Copy admin config
          copy:
            remote_src: yes
            src: /etc/kubernetes/admin.conf
            dest: /root/.kube/config
            owner: root
            group: root
            mode: '0600'
      when: kubeadm_init.rc == 0

    - name: Install Flannel CNI
      command: kubectl apply -f {{ flannel_url }}
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      when: kubeadm_init.rc == 0

    - name: Save join command
      copy:
        content: "{{ hostvars['minikube-master']['kubeadm_init'].stdout_lines[-1] }}"
        dest: /tmp/join-command.sh
        mode: '0755'
      when: kubeadm_init.rc == 0

- hosts: minikube-worker
  become: yes
  tasks:
    - name: Join cluster
      command: /bin/bash /tmp/join-command.sh
      when: hostvars['minikube-master']['kubeadm_init'] is defined
